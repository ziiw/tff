/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/
// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
const fileMap = {
    "agents.baml": "// Agent Functions\nfunction TravelAgent(context: string) -> TravelTools {\n  client GPT4oMini\n  \n  prompt #\"\n    {{ _.role(\"system\") }}\n    You are a travel planning assistant. Help users plan trips by checking weather, searching flights, booking hotels, and creating itineraries. Use intent \"done\" when the trip is fully planned.\n    \n    {{ _.role(\"user\") }}\n    Here is the full context/history so far in XML-like blocks:\n    \n    {{ context }}\n    \n    What travel-related action should I take next?\n    \n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction RecipeAgent(context: string) -> RecipeTools {\n  client GPT4oMini\n  \n  prompt #\"\n    {{ _.role(\"system\") }}\n    You are a cooking assistant. Help users find recipes, get nutritional information, plan meals, and create shopping lists. Use intent \"done\" when the cooking task is complete.\n    \n    {{ _.role(\"user\") }}\n    Here is the full context/history so far in XML-like blocks:\n    \n    {{ context }}\n    \n    What cooking-related action should I take next?\n    \n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction FinanceAgent(context: string) -> FinanceTools {\n  client GPT4oMini\n  \n  prompt #\"\n    {{ _.role(\"system\") }}\n    You are a financial assistant. Help users track expenses, analyze budgets, get investment information, and plan savings goals. Use intent \"done\" when the financial task is complete.\n    \n    {{ _.role(\"user\") }}\n    Here is the full context/history so far in XML-like blocks:\n    \n    {{ context }}\n    \n    What financial action should I take next?\n    \n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction MainCoordinator(context: string) -> CoordinatorTools {\n  client GPT4oMini\n  \n  prompt #\"\n    {{ _.role(\"system\") }}\n    You are the main coordinator agent. Your job is to analyze the user's query and the conversation history, then decide which specialist to delegate to:\n    - Use 'invoke_travel_agent' for travel, trips, flights, hotels, vacations.\n    - Use 'invoke_recipe_agent' for recipes, cooking, food, meals, ingredients, nutrition.\n    - Use 'invoke_finance_agent' for money, budget, expenses, investments, savings, finance.\n    - If the query is unclear or general, use 'respond' to ask for clarification or provide information.\n    - After delegation, use 'done' to complete the turn.\n    \n    {{ _.role(\"user\") }}\n    Here is the full context/history so far in XML-like blocks:\n    \n    {{ context }}\n    \n    Based on the context, what should I do next? Choose an intent to invoke a specialist or respond.\n    \n    {{ ctx.output_format }}\n  \"#\n}\n\n",
    "clients.baml": "client<llm> GPT4oMini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}\n\n",
    "coordinator_tools.baml": "// Main Coordinator Tools\nclass InvokeTravelAgent {\n  intent \"invoke_travel_agent\"\n  query string? @description(\"Optional context about the travel query\")\n}\n\nclass InvokeRecipeAgent {\n  intent \"invoke_recipe_agent\"\n  query string? @description(\"Optional context about the recipe query\")\n}\n\nclass InvokeFinanceAgent {\n  intent \"invoke_finance_agent\"\n  query string? @description(\"Optional context about the finance query\")\n}\n\nclass CoordinatorRespond {\n  intent \"respond\"\n  message string\n}\n\nclass CoordinatorDone {\n  intent \"done\"\n  message string? @description(\"Summary of what was accomplished\")\n}\n\ntype CoordinatorTools = InvokeTravelAgent | InvokeRecipeAgent | InvokeFinanceAgent | CoordinatorRespond | CoordinatorDone\n\n",
    "finance_tools.baml": "// Finance Agent Tools\nclass TrackExpense {\n  intent \"track_expense\"\n  category string\n  amount float\n  description string\n}\n\nclass GetBudgetSummary {\n  intent \"get_budget_summary\"\n  period string\n}\n\nclass GetInvestmentInfo {\n  intent \"get_investment_info\"\n  symbol string\n}\n\nclass CalculateSavingsGoal {\n  intent \"calculate_savings_goal\"\n  targetAmount float\n  currentSavings float\n  monthlyContribution float\n}\n\nclass FinanceRespond {\n  intent \"respond\"\n  message string\n}\n\nclass FinanceDone {\n  intent \"done\"\n  message string @description(\"Summary of what was accomplished\")\n}\n\ntype FinanceTools = TrackExpense | GetBudgetSummary | GetInvestmentInfo | CalculateSavingsGoal | FinanceRespond | FinanceDone\n\n",
    "generators.baml": "generator target {\n    output_type \"typescript\"\n    output_dir \"../\"\n    version \"0.210.0\"\n    default_client_mode async\n}\n\n",
    "recipe_tools.baml": "// Recipe Agent Tools\nclass SearchRecipes {\n  intent \"search_recipes\"\n  ingredients string[]\n  dietary string? @description(\"Optional dietary restriction\")\n}\n\nclass GetNutrition {\n  intent \"get_nutrition\"\n  ingredient string\n}\n\nclass PlanMeal {\n  intent \"plan_meal\"\n  mealType string\n  preferences string[]\n}\n\nclass CreateShoppingList {\n  intent \"create_shopping_list\"\n  recipes string[]\n}\n\nclass RecipeRespond {\n  intent \"respond\"\n  message string\n}\n\nclass RecipeDone {\n  intent \"done\"\n  message string @description(\"Summary of what was accomplished\")\n}\n\ntype RecipeTools = SearchRecipes | GetNutrition | PlanMeal | CreateShoppingList | RecipeRespond | RecipeDone\n\n",
    "travel_tools.baml": "// Travel Agent Tools\nclass GetWeather {\n  intent \"get_weather\"\n  city string\n}\n\nclass SearchFlights {\n  intent \"search_flights\"\n  from string\n  to string\n  date string\n}\n\nclass SearchHotels {\n  intent \"search_hotels\"\n  city string\n  checkIn string\n  checkOut string\n}\n\nclass BookTrip {\n  intent \"book_trip\"\n  destination string\n  startDate string\n  endDate string\n}\n\nclass RespondToUser {\n  intent \"respond\"\n  message string\n}\n\nclass Done {\n  intent \"done\"\n  message string @description(\"Summary of what was accomplished\")\n}\n\ntype TravelTools = GetWeather | SearchFlights | SearchHotels | BookTrip | RespondToUser | Done\n\n",
};
export const getBamlFiles = () => {
    return fileMap;
};
